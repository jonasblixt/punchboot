<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="bpak_2keystore_8h" kind="file" language="C++">
    <compoundname>keystore.h</compoundname>
    <includes refid="bpak_8h" local="no">bpak/bpak.h</includes>
    <includedby refid="asn1_8h" local="no">/docs/include/pb/asn1.h</includedby>
    <includedby refid="crypto_8h" local="no">/docs/include/pb/crypto.h</includedby>
    <includedby refid="pb_2keystore_8h" local="no">/docs/include/pb/keystore.h</includedby>
    <includedby refid="plat_8h" local="no">/docs/include/pb/plat.h</includedby>
    <incdepgraph>
      <node id="19">
        <label>stddef.h</label>
        <link refid="stddef_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stdint_.h</label>
      </node>
      <node id="20">
        <label>stddef_.h</label>
      </node>
      <node id="14">
        <label>/docs/include/bpak/keystore.h</label>
        <link refid="bpak_2keystore_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdbool.h</label>
        <link refid="stdbool_8h_source"/>
      </node>
      <node id="15">
        <label>bpak/bpak.h</label>
        <link refid="bpak_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22">
        <label>/docs/include/pb/asn1.h</label>
        <link refid="asn1_8h_source"/>
      </node>
      <node id="23">
        <label>/docs/include/pb/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/docs/include/bpak/keystore.h</label>
        <link refid="bpak_2keystore_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/docs/include/pb/plat.h</label>
        <link refid="plat_8h_source"/>
      </node>
      <node id="24">
        <label>/docs/include/pb/image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/docs/include/pb/boot.h</label>
        <link refid="boot_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/docs/include/pb/keystore.h</label>
        <link refid="pb_2keystore_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbpak__key" prot="public">bpak_key</innerclass>
    <innerclass refid="structbpak__keystore" prot="public">bpak_keystore</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bpak_2keystore_8h_1afaf8a5ec7e99bcf5eecbaf773d6fe2bb" prot="public" static="no">
        <name>BPAK_KEYSTORE_UUID</name>
        <initializer>&quot;5df103ef-e774-450b-95c5-1fef51ceec28&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="6" column="9" bodyfile="/docs/include/bpak/keystore.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13d" prot="public" static="no">
        <name>bpak_key_kind</name>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13da2550a8ce24b091fb942820bcdaa62b16" prot="public">
          <name>BPAK_KEY_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13dae722a0b2b76a359fbd43f2df2e79809b" prot="public">
          <name>BPAK_KEY_PUB_RSA4096</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13da9c7e00996cd777bdb538782997c066be" prot="public">
          <name>BPAK_KEY_PUB_PRIME256v1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13da1f5719f9b2cf1415518100892874859d" prot="public">
          <name>BPAK_KEY_PUB_SECP384r1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13da1d5bc29d8525f38634a94003167f57dd" prot="public">
          <name>BPAK_KEY_PUB_SECP521r1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13da64884e5e9d0c9a4bf231538cb6e4a4fc" prot="public">
          <name>BPAK_KEY_PRI_RSA4096</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13daceaba78e6cafbf9ea5d7c09a53794287" prot="public">
          <name>BPAK_KEY_PRI_PRIME256v1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13dac1a1247a6f0d772b099228771438dda9" prot="public">
          <name>BPAK_KEY_PRI_SECP384r1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="bpak_2keystore_8h_1a3b18deaf15948d59055116a68714f13da89db174b9e368a171ecdd94bde76149d" prot="public">
          <name>BPAK_KEY_PRI_SECP521r1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="9" column="1" bodyfile="/docs/include/bpak/keystore.h" bodystart="8" bodyend="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bpak_2keystore_8h_1a8d00f23007e8d7269ec50ff526ab85b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bpak_keystore_empty</definition>
        <argsstring>(struct bpak_keystore *ks, uint32_t id)</argsstring>
        <name>bpak_keystore_empty</name>
        <param>
          <type>struct <ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref> *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bpak_2keystore_8h_1a326a8f6938a5a1f0e3feb5aa97fbe34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bpak_keystore_verify</definition>
        <argsstring>(struct bpak_keystore *ks, struct bpak_keystore *internal_ks, uint8_t key_id)</argsstring>
        <name>bpak_keystore_verify</name>
        <param>
          <type>struct <ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref> *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>struct <ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref> *</type>
          <declname>internal_ks</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>key_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bpak_2keystore_8h_1a6a9455cce91a8b398684dd5fd7aabe1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bpak_keystore_add</definition>
        <argsstring>(struct bpak_keystore *ks, struct bpak_key *k)</argsstring>
        <name>bpak_keystore_add</name>
        <param>
          <type>struct <ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref> *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>struct <ref refid="structbpak__key" kindref="compound">bpak_key</ref> *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bpak_2keystore_8h_1ab8f1d2abf5754495f32ea71fa11c0274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bpak_keystore_get</definition>
        <argsstring>(struct bpak_keystore *ks, uint8_t id, struct bpak_key **k)</argsstring>
        <name>bpak_keystore_get</name>
        <param>
          <type>struct <ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref> *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct <ref refid="structbpak__key" kindref="compound">bpak_key</ref> **</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bpak_2keystore_8h_1a1cec7833c3d98f60c6ae51bf49267902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bpak_keystore_add_pem</definition>
        <argsstring>(struct bpak_keystore *ks, const char *filename)</argsstring>
        <name>bpak_keystore_add_pem</name>
        <param>
          <type>struct <ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref> *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bpak_2keystore_8h_1a6cd4f234a547167f2848d5ca57fafb39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bpak_keystore_add_der</definition>
        <argsstring>(struct bpak_keystore *ks, const char *filename)</argsstring>
        <name>bpak_keystore_add_der</name>
        <param>
          <type>struct <ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref> *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/bpak/keystore.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_BPAK_KEYSTORE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_BPAK_KEYSTORE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bpak/bpak.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BPAK_KEYSTORE_UUID<sp/>&quot;5df103ef-e774-450b-95c5-1fef51ceec28&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>bpak_key_kind</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_INVALID,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PUB_RSA4096,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PUB_PRIME256v1,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PUB_SECP384r1,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PUB_SECP521r1,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PRI_RSA4096,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PRI_PRIME256v1,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PRI_SECP384r1,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>BPAK_KEY_PRI_SECP521r1,</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structbpak__key" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbpak__key" kindref="compound">bpak_key</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>bpak_key_kind<sp/>kind;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>size;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>id;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>key_mask;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[];</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29" refid="structbpak__keystore" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>id;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>no_of_keys;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verified;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbpak__key" kindref="compound">bpak_key</ref><sp/>*keys[];</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpak_keystore_empty(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref><sp/>*ks,<sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpak_keystore_verify(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref><sp/>*ks,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref><sp/>*internal_ks,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>key_id);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpak_keystore_add(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref><sp/>*ks,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__key" kindref="compound">bpak_key</ref><sp/>*k);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpak_keystore_get(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref><sp/>*ks,<sp/>uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__key" kindref="compound">bpak_key</ref><sp/>**k);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpak_keystore_add_pem(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref><sp/>*ks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bpak_keystore_add_der(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbpak__keystore" kindref="compound">bpak_keystore</ref><sp/>*ks,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>INCLUDE_BPAK_KEYSTORE_H_</highlight></codeline>
    </programlisting>
    <location file="/docs/include/bpak/keystore.h"/>
  </compounddef>
</doxygen>
