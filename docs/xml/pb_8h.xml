<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pb_8h" kind="file" language="C++">
    <compoundname>pb.h</compoundname>
    <includes refid="stdio_8h" local="no">stdio.h</includes>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="stddef_8h" local="no">stddef.h</includes>
    <includes refid="errors_8h" local="no">pb/errors.h</includes>
    <includes local="no">config.h</includes>
    <includedby refid="crypto_8h" local="no">/docs/include/pb/crypto.h</includedby>
    <includedby refid="gpt_8h" local="no">/docs/include/pb/gpt.h</includedby>
    <includedby refid="io_8h" local="no">/docs/include/pb/io.h</includedby>
    <includedby refid="pb_2keystore_8h" local="no">/docs/include/pb/keystore.h</includedby>
    <includedby refid="plat_8h" local="no">/docs/include/pb/plat.h</includedby>
    <includedby refid="xlat__tables__arch_8h" local="no">/docs/include/pb/xlat_tables/xlat_tables_arch.h</includedby>
    <incdepgraph>
      <node id="576">
        <label>stdio.h</label>
        <link refid="stdio_8h_source"/>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="579" relation="include">
        </childnode>
      </node>
      <node id="585">
        <label>pb/errors.h</label>
        <link refid="errors_8h_source"/>
      </node>
      <node id="583">
        <label>stddef.h</label>
        <link refid="stddef_8h_source"/>
        <childnode refid="584" relation="include">
        </childnode>
      </node>
      <node id="581">
        <label>stdint_.h</label>
      </node>
      <node id="575">
        <label>/docs/include/pb/pb.h</label>
        <link refid="pb_8h"/>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
      </node>
      <node id="577">
        <label>cdefs.h</label>
        <link refid="cdefs_8h_source"/>
      </node>
      <node id="584">
        <label>stddef_.h</label>
      </node>
      <node id="578">
        <label>stdio_.h</label>
      </node>
      <node id="582">
        <label>stdbool.h</label>
        <link refid="stdbool_8h_source"/>
      </node>
      <node id="579">
        <label>stdarg.h</label>
        <link refid="stdarg_8h_source"/>
      </node>
      <node id="580">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="581" relation="include">
        </childnode>
      </node>
      <node id="586">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="589">
        <label>/docs/include/pb/asn1.h</label>
        <link refid="asn1_8h_source"/>
      </node>
      <node id="588">
        <label>/docs/include/pb/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
      </node>
      <node id="587">
        <label>/docs/include/pb/pb.h</label>
        <link refid="pb_8h"/>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="596">
        <label>/docs/include/pb/xlat_tables/xlat_tables_arch.h</label>
        <link refid="xlat__tables__arch_8h_source"/>
        <childnode refid="597" relation="include">
        </childnode>
      </node>
      <node id="593">
        <label>/docs/include/pb/gpt.h</label>
        <link refid="gpt_8h_source"/>
      </node>
      <node id="597">
        <label>/docs/lib/xlat_tables/xlat_tables_private.h</label>
        <link refid="xlat__tables__private_8h_source"/>
      </node>
      <node id="594">
        <label>/docs/include/pb/io.h</label>
        <link refid="io_8h_source"/>
      </node>
      <node id="592">
        <label>/docs/include/pb/plat.h</label>
        <link refid="plat_8h_source"/>
      </node>
      <node id="590">
        <label>/docs/include/pb/image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="591">
        <label>/docs/include/pb/boot.h</label>
        <link refid="boot_8h_source"/>
        <childnode refid="592" relation="include">
        </childnode>
      </node>
      <node id="595">
        <label>/docs/include/pb/keystore.h</label>
        <link refid="pb_2keystore_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pb_8h_1a35086c943ccfbec23540722f0bec1af9" prot="public" static="no">
        <name>UUID_STRING_SIZE</name>
        <initializer>37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="28" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a5db91c4b658dc322b42959cb5c851020" prot="public" static="no">
        <name>UUID_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="29" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a378e28bfcb78d17285210d6bbb70a083" prot="public" static="no">
        <name>LOG_INFO</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="41" column="14" bodyfile="/docs/include/pb/pb.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a9ed72cb0e6f822dd1783d61bbca03ae0" prot="public" static="no">
        <name>LOG_INFO2</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="42" column="13" bodyfile="/docs/include/pb/pb.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1afb97e6291db24665313453d192941330" prot="public" static="no">
        <name>LOG_DBG</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="51" column="14" bodyfile="/docs/include/pb/pb.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1add82efa459e0af380b68522c29b9fd44" prot="public" static="no">
        <name>LOG_WARN</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="65" column="14" bodyfile="/docs/include/pb/pb.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1ad6db28c61c838c1f7316417e1e4847f2" prot="public" static="no">
        <name>LOG_ERR</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="66" column="13" bodyfile="/docs/include/pb/pb.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a86d500a34c624c2cae56bc25a31b12f3" prot="public" static="no">
        <name>UNUSED</name>
        <param><defname>x</defname></param>
        <initializer>(void)(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="69" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a28d21eeb02ac5e51b3ea70270ab25f6f" prot="public" static="no">
        <name>PB_CHECK_OVERLAP</name>
        <param><defname>__a</defname></param>
        <param><defname>__sz</defname></param>
        <param><defname>__region_start</defname></param>
        <param><defname>__region_end</defname></param>
        <initializer>(((__a) &lt;= ((uintptr_t) (__region_end))) &amp;&amp;                 \
     ((__a) + (__sz) &gt;= ((uintptr_t) (__region_start))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="71" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a457e86803a396860d43132c8476ca4f8" prot="public" static="no">
        <name>__no_bss</name>
        <initializer>__attribute__((section (&quot;.bigbuffer&quot;)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="75" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1ad02267159a216385be727705155ee7ef" prot="public" static="no">
        <name>__translation_table</name>
        <initializer>__attribute__((section (&quot;.translation_table&quot;)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="76" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a868b966c41f2ac6863246dc11e05345d" prot="public" static="no">
        <name>__a4k</name>
        <initializer>__attribute__ ((aligned(4096)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="77" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a98652eaf25b4af1298681b3b8aea8780" prot="public" static="no">
        <name>__a16b</name>
        <initializer>__attribute__ ((aligned(16)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="78" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1a9f894e4982c5fc3207589e9adf6af3b1" prot="public" static="no">
        <name>__a16k</name>
        <initializer>__attribute__ ((aligned(16384)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="79" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1aa2553f7ecdd2abe5260818aca108c5f1" prot="public" static="no">
        <name>membersof</name>
        <param><defname>array</defname></param>
        <initializer>(sizeof(array) / sizeof((array)[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="81" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pb_8h_1ae32bd6d8d48504cd0425f6872aa525f1" prot="public" static="no">
        <name>__DECONST</name>
        <param><defname>type</defname></param>
        <param><defname>var</defname></param>
        <initializer>((type)(uintptr_t)(const void *)(var))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="82" column="9" bodyfile="/docs/include/pb/pb.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pb_8h_1a16af7b253440dadd46a80a4b9fddba4d" prot="public" static="no">
        <name>@14</name>
        <enumvalue id="pb_8h_1a16af7b253440dadd46a80a4b9fddba4daeeb194a989cab936b714888cca25fadf" prot="public">
          <name>PB_SECURITY_STATE_NOT_SECURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pb_8h_1a16af7b253440dadd46a80a4b9fddba4dab1867220cf8d53d11bce238ddc072727" prot="public">
          <name>PB_SECURITY_STATE_CONFIGURED_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pb_8h_1a16af7b253440dadd46a80a4b9fddba4da82aa1bb02d25a257b710ee1e9944c2d4" prot="public">
          <name>PB_SECURITY_STATE_CONFIGURED_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pb_8h_1a16af7b253440dadd46a80a4b9fddba4daeaeb008f687b93fadf6c6efd44c230d7" prot="public">
          <name>PB_SECURITY_STATE_SECURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Punch BOOT</para><para>Copyright (C) 2020 Jonas Blixt <ulink url="mailto:jonpe960@gmail.com">jonpe960@gmail.com</ulink></para><para>SPDX-License-Identifier: BSD-3-Clause </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="21" column="1" bodyfile="/docs/include/pb/pb.h" bodystart="20" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pb_8h_1a384c24723fccf1873a608e7aea0c3225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pb_delay_ms</definition>
        <argsstring>(unsigned int ms)</argsstring>
        <name>pb_delay_ms</name>
        <param>
          <type>unsigned int</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pb_8h_1acb4bcf4d314010cb92be3e9bf26e5fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pb_delay_us</definition>
        <argsstring>(unsigned int us)</argsstring>
        <name>pb_delay_us</name>
        <param>
          <type>unsigned int</type>
          <declname>us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pb_8h_1a51f9cfc3835ead392de3d162743f6116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pb_main</definition>
        <argsstring>(void)</argsstring>
        <name>pb_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/pb.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_PB_PB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_PB_PB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pb/errors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>PB_SECURITY_STATE_NOT_SECURE,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>PB_SECURITY_STATE_CONFIGURED_ERR,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>PB_SECURITY_STATE_CONFIGURED_OK,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>PB_SECURITY_STATE_SECURE,</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UUID_STRING_SIZE<sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UUID_SIZE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LOGLEVEL<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_INFO(...)<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>printf(&quot;I<sp/>%s:<sp/>&quot;<sp/>,<sp/>__func__);\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(__VA_ARGS__);\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\n\r&quot;);<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_INFO2(...)<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>printf(&quot;I:<sp/>&quot;);\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(__VA_ARGS__);<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_INFO(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_INFO2(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LOGLEVEL<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_DBG(...)<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>printf(&quot;D<sp/>%s:<sp/>&quot;<sp/>,<sp/>__func__);\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(__VA_ARGS__);\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\n\r&quot;);<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_DBG(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LOGLEVEL<sp/>&gt;=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_WARN(...)<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>printf(&quot;W<sp/>%s:<sp/>&quot;<sp/>,<sp/>__func__);\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(__VA_ARGS__);\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\n\r&quot;);<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_ERR(...)<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/>printf(&quot;E<sp/>%s:<sp/>&quot;<sp/>,<sp/>__func__);\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(__VA_ARGS__);\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;\n\r&quot;);<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_WARN(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LOG_ERR(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNUSED(x)<sp/>(void)(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PB_CHECK_OVERLAP(__a,<sp/>__sz,<sp/>__region_start,<sp/>__region_end)<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(((__a)<sp/>&lt;=<sp/>((uintptr_t)<sp/>(__region_end)))<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>((__a)<sp/>+<sp/>(__sz)<sp/>&gt;=<sp/>((uintptr_t)<sp/>(__region_start))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__no_bss<sp/>__attribute__((section<sp/>(&quot;.bigbuffer&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__translation_table<sp/>__attribute__((section<sp/>(&quot;.translation_table&quot;)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__a4k<sp/><sp/>__attribute__<sp/>((aligned(4096)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__a16b<sp/><sp/>__attribute__<sp/>((aligned(16)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__a16k<sp/><sp/>__attribute__<sp/>((aligned(16384)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>membersof(array)<sp/>(sizeof(array)<sp/>/<sp/>sizeof((array)[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DECONST(type,<sp/>var)<sp/><sp/><sp/><sp/>((type)(uintptr_t)(const<sp/>void<sp/>*)(var))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pb_delay_ms(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pb_delay_us(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>us);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pb_main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>INCLUDE_PB_PB_H_</highlight></codeline>
    </programlisting>
    <location file="/docs/include/pb/pb.h"/>
  </compounddef>
</doxygen>
