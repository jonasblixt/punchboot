<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="fuse_8h" kind="file" language="C++">
    <compoundname>fuse.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includedby refid="plat_8h" local="no">/docs/include/pb/plat.h</includedby>
    <incdepgraph>
      <node id="182">
        <label>stdint_.h</label>
      </node>
      <node id="180">
        <label>/docs/include/pb/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="182" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="183">
        <label>/docs/include/pb/fuse.h</label>
        <link refid="fuse_8h"/>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>/docs/include/pb/plat.h</label>
        <link refid="plat_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structfuse" prot="public">fuse</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="fuse_8h_1a55f964dba2d49e00888d2c82c06ef41d" prot="public" static="no">
        <name>FUSE_INVALID</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Punch BOOT</para><para>Copyright (C) 2020 Jonas Blixt <ulink url="mailto:jonpe960@gmail.com">jonpe960@gmail.com</ulink></para><para>SPDX-License-Identifier: BSD-3-Clause </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/fuse.h" line="15" column="9" bodyfile="/docs/include/pb/fuse.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fuse_8h_1a6bcb99342f95e4846f1f1a1dfbf5437b" prot="public" static="no">
        <name>FUSE_VALID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/fuse.h" line="16" column="9" bodyfile="/docs/include/pb/fuse.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fuse_8h_1a725a39decc4fb65408a44d50bac28dce" prot="public" static="no">
        <name>foreach_fuse_read</name>
        <param><defname>__f</defname></param>
        <param><defname>__var</defname></param>
        <initializer>for (struct <ref refid="structfuse" kindref="compound">fuse</ref> *__f = (struct <ref refid="structfuse" kindref="compound">fuse</ref> *)__var; \
        (plat_fuse_read(__f) == PB_OK); __f++)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/fuse.h" line="18" column="9" bodyfile="/docs/include/pb/fuse.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fuse_8h_1a7c562f2eecb2aafcf92fd1e8574cc71f" prot="public" static="no">
        <name>foreach_fuse</name>
        <param><defname>__f</defname></param>
        <param><defname>__var</defname></param>
        <initializer>for (struct <ref refid="structfuse" kindref="compound">fuse</ref> *__f = (struct <ref refid="structfuse" kindref="compound">fuse</ref> *)__var; \
        ((__f-&gt;status &amp; FUSE_VALID) == FUSE_VALID); __f++)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/fuse.h" line="22" column="9" bodyfile="/docs/include/pb/fuse.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_PB_FUSE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_PB_FUSE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUSE_INVALID<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUSE_VALID<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>foreach_fuse_read(__f,<sp/>__var)<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>(struct<sp/>fuse<sp/>*__f<sp/>=<sp/>(struct<sp/>fuse<sp/>*)__var;<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(plat_fuse_read(__f)<sp/>==<sp/>PB_OK);<sp/>__f++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>foreach_fuse(__f,<sp/>__var)<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>(struct<sp/>fuse<sp/>*__f<sp/>=<sp/>(struct<sp/>fuse<sp/>*)__var;<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((__f-&gt;status<sp/>&amp;<sp/>FUSE_VALID)<sp/>==<sp/>FUSE_VALID);<sp/>__f++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structfuse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfuse" kindref="compound">fuse</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bank;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>word;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>shadow;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>addr;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>value;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>default_value;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>description[20];</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>INCLUDE_PB_FUSE_H_</highlight></codeline>
    </programlisting>
    <location file="/docs/include/pb/fuse.h"/>
  </compounddef>
</doxygen>
