<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="board_8h" kind="file" language="C++">
    <compoundname>board.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includes refid="stdbool_8h" local="no">stdbool.h</includes>
    <includes refid="stddef_8h" local="no">stddef.h</includes>
    <includedby refid="plat_8h" local="no">/docs/include/pb/plat.h</includedby>
    <incdepgraph>
      <node id="96">
        <label>stddef.h</label>
        <link refid="stddef_8h_source"/>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>stdint_.h</label>
      </node>
      <node id="92">
        <label>/docs/include/pb/board.h</label>
        <link refid="board_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>stddef_.h</label>
      </node>
      <node id="95">
        <label>stdbool.h</label>
        <link refid="stdbool_8h_source"/>
      </node>
      <node id="93">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="98">
        <label>/docs/include/pb/board.h</label>
        <link refid="board_8h"/>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>/docs/include/pb/plat.h</label>
        <link refid="plat_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="board_8h_1aed777decf78c6ad24e492fcdb0a89aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_early_init</definition>
        <argsstring>(void *plat)</argsstring>
        <name>board_early_init</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Punch BOOT</para><para>Copyright (C) 2020 Jonas Blixt <ulink url="mailto:jonpe960@gmail.com">jonpe960@gmail.com</ulink></para><para>SPDX-License-Identifier: BSD-3-Clause Function: board_early_init</para><para>Called as early as possible by platform init code</para><para>Return value: PB_OK if there is no error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1afbbab5a6c04b8edb1ec0dbc44ea0735e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_late_init</definition>
        <argsstring>(void *plat)</argsstring>
        <name>board_late_init</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a414f7fe00e711c4440f647eb8df023ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool board_force_command_mode</definition>
        <argsstring>(void *plat)</argsstring>
        <name>board_force_command_mode</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a49f86a94e181433dc3122ca5be8d8f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_patch_bootargs</definition>
        <argsstring>(void *plat, void *fdt, int offset, bool verbose_boot)</argsstring>
        <name>board_patch_bootargs</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>fdt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose_boot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1aea4818db7a638b2e0d720921d9d2bb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_boot_override</definition>
        <argsstring>(void *plat, uint8_t *uuid)</argsstring>
        <name>board_boot_override</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a18761393114bd1fb00ff7a24e544e37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_command</definition>
        <argsstring>(void *plat, uint32_t command, void *bfr, size_t size, void *response_bfr, size_t *response_size)</argsstring>
        <name>board_command</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>bfr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>response_bfr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>response_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a38682b12ae0278461b913e1be3a96082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_status</definition>
        <argsstring>(void *plat, void *response_bfr, size_t *response_size)</argsstring>
        <name>board_status</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>response_bfr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>response_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a584fdfa0e479bc8c580325886e58238a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_early_boot</definition>
        <argsstring>(void *plat)</argsstring>
        <name>board_early_boot</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1ac9adfd82ff7a665135fa06e88f6c9dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_late_boot</definition>
        <argsstring>(void *plat, bool *abort_boot, bool manual)</argsstring>
        <name>board_late_boot</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>abort_boot</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>manual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a76ef469ac1b80b4931d9d51540a21892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_slc_set_configuration</definition>
        <argsstring>(void *plat)</argsstring>
        <name>board_slc_set_configuration</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a5de222b99a4b113630737dec20faec7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_slc_set_configuration_lock</definition>
        <argsstring>(void *plat)</argsstring>
        <name>board_slc_set_configuration_lock</name>
        <param>
          <type>void *</type>
          <declname>plat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a72cb6d55ce93c283a16934507941e434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int board_command_mode_auth</definition>
        <argsstring>(char *password, size_t length)</argsstring>
        <name>board_command_mode_auth</name>
        <param>
          <type>char *</type>
          <declname>password</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="board_8h_1a3c46352c2aa935dd983c30eba4b0ec35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* board_name</definition>
        <argsstring>(void)</argsstring>
        <name>board_name</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/board.h" line="47" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_PB_BOARD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_PB_BOARD_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_early_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_late_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>board_force_command_mode(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_patch_bootargs(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*fdt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose_boot);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_boot_override(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat,<sp/>uint8_t<sp/>*<ref refid="structuuid" kindref="compound">uuid</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_command(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>command,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*bfr,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*response_bfr,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*response_size);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_status(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*response_bfr,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*response_size);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_early_boot(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_late_boot(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*abort_boot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>manual);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_slc_set_configuration(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_slc_set_configuration_lock(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plat);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>board_command_mode_auth(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*board_name(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>INCLUDE_PB_BOARD_H_</highlight></codeline>
    </programlisting>
    <location file="/docs/include/pb/board.h"/>
  </compounddef>
</doxygen>
