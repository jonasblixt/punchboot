<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="timestamp_8h" kind="file" language="C++">
    <compoundname>timestamp.h</compoundname>
    <includes refid="stdint_8h" local="no">stdint.h</includes>
    <includedby refid="boot_8h" local="no">/docs/include/pb/boot.h</includedby>
    <incdepgraph>
      <node id="636">
        <label>/docs/include/pb/timestamp.h</label>
        <link refid="timestamp_8h"/>
        <childnode refid="637" relation="include">
        </childnode>
      </node>
      <node id="638">
        <label>stdint_.h</label>
      </node>
      <node id="637">
        <label>stdint.h</label>
        <link refid="stdint_8h_source"/>
        <childnode refid="638" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="639">
        <label>/docs/include/pb/timestamp.h</label>
        <link refid="timestamp_8h"/>
        <childnode refid="640" relation="include">
        </childnode>
      </node>
      <node id="641">
        <label>/docs/include/pb/plat.h</label>
        <link refid="plat_8h_source"/>
      </node>
      <node id="640">
        <label>/docs/include/pb/boot.h</label>
        <link refid="boot_8h_source"/>
        <childnode refid="641" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structpb__timestamp" prot="public">pb_timestamp</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="timestamp_8h_1a6a1c204db802e8a0b6eaaaabcdd1f354" prot="public" static="no">
        <name>TIMESTAMP</name>
        <param><defname>__name__</defname></param>
        <initializer>{ \
                                .begin_ts_us = 0, \
                                .end_ts_us = 0, \
                                .description = __name__, \
                                .next = NULL, \
                            };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Punch BOOT</para><para>Copyright (C) 2020 Jonas Blixt <ulink url="mailto:jonpe960@gmail.com">jonpe960@gmail.com</ulink></para><para>SPDX-License-Identifier: BSD-3-Clause </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="15" column="9" bodyfile="/docs/include/pb/timestamp.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="timestamp_8h_1aae70503a386b020aa76a34b32be5956f" prot="public" static="no">
        <name>timestamp_foreach</name>
        <param><defname>__ts__</defname></param>
        <param><defname>__name__</defname></param>
        <initializer>for (struct <ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref> *__name__ = __ts__; __name__; __name__ = __name__-&gt;next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="22" column="9" bodyfile="/docs/include/pb/timestamp.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="timestamp_8h_1a3b9cbf8226fba3ab0359ea36c6c92074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timestamp_init</definition>
        <argsstring>(void)</argsstring>
        <name>timestamp_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="timestamp_8h_1ae1c8ad0e708dbb56b8bb659efc1ee912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int timestamp_begin</definition>
        <argsstring>(struct pb_timestamp *ts)</argsstring>
        <name>timestamp_begin</name>
        <param>
          <type>struct <ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref> *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="timestamp_8h_1a07c4797b4bbdc2c331f9ef1409d70672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int timestamp_end</definition>
        <argsstring>(struct pb_timestamp *ts)</argsstring>
        <name>timestamp_end</name>
        <param>
          <type>struct <ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref> *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="timestamp_8h_1a49cb2565945f045d5d0d585c9d95d3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* timestamp_description</definition>
        <argsstring>(struct pb_timestamp *ts)</argsstring>
        <name>timestamp_description</name>
        <param>
          <type>struct <ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref> *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="timestamp_8h_1a2dc1c434271630adec6435db04c1d42b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int timestamp_read_us</definition>
        <argsstring>(struct pb_timestamp *ts)</argsstring>
        <name>timestamp_read_us</name>
        <param>
          <type>struct <ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref> *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="timestamp_8h_1a5066ab1df141568bf14986a98fde89c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref> *</type>
        <definition>struct pb_timestamp* timestamp_get_first</definition>
        <argsstring>(void)</argsstring>
        <name>timestamp_get_first</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/docs/include/pb/timestamp.h" line="38" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#ifndef<sp/>INCLUDE_PB_TIMESTAMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INCLUDE_PB_TIMESTAMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMESTAMP(__name__)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.begin_ts_us<sp/>=<sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.end_ts_us<sp/>=<sp/>0,<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.description<sp/>=<sp/>__name__,<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.next<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>timestamp_foreach(__ts__,<sp/>__name__)<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(struct<sp/>pb_timestamp<sp/>*__name__<sp/>=<sp/>__ts__;<sp/>__name__;<sp/>__name__<sp/>=<sp/>__name__-&gt;next)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structpb__timestamp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>begin_ts_us;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>end_ts_us;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref><sp/>*next;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>timestamp_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timestamp_begin(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref><sp/>*ts);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timestamp_end(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref><sp/>*ts);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*timestamp_description(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref><sp/>*ts);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timestamp_read_us(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref><sp/>*ts);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpb__timestamp" kindref="compound">pb_timestamp</ref><sp/>*<sp/>timestamp_get_first(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>INCLUDE_PB_TIMESTAMP_H_</highlight></codeline>
    </programlisting>
    <location file="/docs/include/pb/timestamp.h"/>
  </compounddef>
</doxygen>
