os: Visual Studio 2019
clone_depth: 1

environment:
    MSYSTEM: MINGW64
    # Tell msys2 to inherit the current directory when starting the shell
    CHERE_INVOKING: 1

configuration:
  - Release

matrix:
  fast_finish: true

install:
  # bitpacker
  - git clone https://github.com/jonasblixt/bpak.git "C:\bpak" --depth 1 --branch v0.4.0
  # libwdi, specific commit checked out in build step
  - git clone https://github.com/pbatard/libwdi.git "C:\libwdi"
  # install innosetup for creating installers
  - choco install InnoSetup
  - set PATH=%PATH%;"C:\Program Files (x86)\Inno Setup 5"

build_script:

  # Install MinGW dependencies for 64 bit
  - C:\msys64\usr\bin\bash -lc "pacman -Sy --noconfirm pacman"
  - C:\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
  - C:\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
  - C:\msys64\usr\bin\bash -lc "pacman -Sy --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-pkg-config"
  - C:\msys64\usr\bin\bash -lc "pacman -Sy --noconfirm mingw-w64-x86_64-python mingw-w64-x86_64-python-setuptools"
  - C:\msys64\usr\bin\bash -lc "pacman -U --noconfirm http://repo.msys2.org/mingw/x86_64/mingw-w64-x86_64-libusb-1.0.23-1-any.pkg.tar.xz"
  - C:\msys64\usr\bin\bash -lc "pacman -Sy --noconfirm autoconf-archive libtool"

  # Build bpak
  - ps: pushd "C:\bpak"
  - C:\msys64\usr\bin\bash -lc "cd C:/bpak && autoreconf -fi && ./configure --disable-tool --disable-codecs && make && make install"
  - ps: popd
  # Build libwdi
  - ps: pushd "C:\libwdi"
  - git checkout faf20f6a0fad88b741c17e7f6bd3a6fe51fe3044
  - C:\msys64\usr\bin\bash -lc "./bootstrap.sh && ./configure --with-wdkdir=\"C:/Program Files (x86)/Windows Kits/10\" --disable-32bit && make && make -C examples"
  - ps: popd
  # Build punchboot-tools MinGW 64 bit
  - echo "Building..."
  - C:\msys64\usr\bin\bash -lc "export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig && cd C:/projects/punchboot-tools && autoreconf -fi && ./configure CFLAGS=\"-static\" && make LDFLAGS=\"-all-static\""
  # Package
  - iscc C:\projects\punchboot-tools\dist\punchboot-tools-x64.iss
  # push all dist files as artifacts
  - ps: Get-ChildItem -Path c:\ -Filter "punchboot-tools-setup*" | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

deploy:
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: "MI3lZI3eO/bf379rNHCswSsznfJfU9WAjzybws3iKIB/5GkrKqLgbZtQVJVfxixg" # your encrypted token from GitHub
    artifact: c:\punchboot-tools-setup-x64.\*.exe 
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    APPVEYOR_REPO_TAG: true        # deploy on tag push only
